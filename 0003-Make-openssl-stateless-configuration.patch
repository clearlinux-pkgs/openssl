From 9ce17468696b746573cedb4c26073e92b4e048cb Mon Sep 17 00:00:00 2001
From: "Jaime A. Garcia" <jaime.garcia.naranjo@intel.com>
Date: Thu, 2 Feb 2017 18:05:40 +0000
Subject: [PATCH] Make openssl stateless configuration

Signed-off-by: Jaime A. Garcia <jaime.garcia.naranjo@intel.com>
---
 Configure         | 31 ++++++++++++++++++++++++++++++-
 Makefile.org      |  9 +++++++--
 apps/Makefile     |  1 +
 apps/apps.c       | 20 ++++++++++++++++++++
 crypto/cryptlib.h | 10 ++++++++--
 e_os.h            |  1 +
 6 files changed, 67 insertions(+), 5 deletions(-)

diff --git a/Configure b/Configure
index b00bf2771b..640912d0d0 100755
--- a/Configure
+++ b/Configure
@@ -11,12 +11,14 @@ use File::Compare;
 
 # see INSTALL for instructions.
 
-my $usage="Usage: Configure [no-<cipher> ...] [enable-<cipher> ...] [experimental-<cipher> ...] [-Dxxx] [-lxxx] [-Lxxx] [-fxxx] [-Kxxx] [no-hw-xxx|no-hw] [[no-]threads] [[no-]shared] [[no-]zlib|zlib-dynamic] [no-asm] [no-dso] [no-krb5] [sctp] [386] [--prefix=DIR] [--openssldir=OPENSSLDIR] [--with-xxx[=vvv]] [--test-sanity] os/compiler[:flags]\n";
+my $usage="Usage: Configure [no-<cipher> ...] [enable-<cipher> ...] [experimental-<cipher> ...] [-Dxxx] [-lxxx] [-Lxxx] [-fxxx] [-Kxxx] [no-hw-xxx|no-hw] [[no-]threads] [[no-]shared] [[no-]zlib|zlib-dynamic] [no-asm] [no-dso] [no-krb5] [sctp] [386] [--prefix=DIR] [--openssldir=OPENSSLDIR] [--openssldir_defaults=OPENSSLDIR_DEFAULTS] [--with-xxx[=vvv]] [--test-sanity] os/compiler[:flags]\n";
 
 # Options:
 #
 # --openssldir  install OpenSSL in OPENSSLDIR (Default: DIR/ssl if the
 #               --prefix option is given; /usr/local/ssl otherwise)
+# --openssldir_defaults  directory for stateless config (Default:
+#               /usr/share/defaults/ssl)
 # --prefix      prefix for the OpenSSL include, lib and bin directories
 #               (Default: the OPENSSLDIR directory)
 #
@@ -729,6 +731,7 @@ my $idx_multilib = $idx++;
 my $prefix="";
 my $libdir="";
 my $openssldir="";
+my $openssldir_defaults="";
 my $exe_ext="";
 my $install_prefix= "$ENV{'INSTALL_PREFIX'}";
 my $cross_compile_prefix="";
@@ -958,6 +961,10 @@ PROCESS_ARGS:
 				{
 				$openssldir=$1;
 				}
+			elsif (/^--openssldir_defaults=(.*)$/)
+				{
+				$openssldir_defaults=$1;
+				}
 			elsif (/^--install.prefix=(.*)$/)
 				{
 				$install_prefix=$1;
@@ -1196,6 +1203,7 @@ $exe_ext=".nlm" if ($target =~ /netware/);
 $exe_ext=".pm"  if ($target =~ /vos/);
 $openssldir="/usr/local/ssl" if ($openssldir eq "" and $prefix eq "");
 $prefix=$openssldir if $prefix eq "";
+$openssldir_defaults="/usr/share/defaults/ssl" if $openssldir_defaults eq "";
 
 $default_ranlib= &which("ranlib") or $default_ranlib="true";
 $perl=$ENV{'PERL'} or $perl=&which("perl5") or $perl=&which("perl")
@@ -1205,6 +1213,7 @@ my $make = $ENV{'MAKE'} || "make";
 $cross_compile_prefix=$ENV{'CROSS_COMPILE'} if $cross_compile_prefix eq "";
 
 chop $openssldir if $openssldir =~ /\/$/;
+chop $openssldir_defaults if $openssldir_defaults =~ /\/$/;
 chop $prefix if $prefix =~ /.\/$/;
 
 $openssldir=$prefix . "/ssl" if $openssldir eq "";
@@ -1711,6 +1720,7 @@ while (<IN>)
 	s/^INSTALLTOP=.*$/INSTALLTOP=$prefix/;
 	s/^MULTILIB=.*$/MULTILIB=$multilib/;
 	s/^OPENSSLDIR=.*$/OPENSSLDIR=$openssldir/;
+	s/^OPENSSLDIR_DEFAULTS=.*$/OPENSSLDIR_DEFAULTS=$openssldir_defaults/;
 	s/^LIBDIR=.*$/LIBDIR=$libdir/;
 	s/^INSTALL_PREFIX=.*$/INSTALL_PREFIX=$install_prefix/;
 	s/^PLATFORM=.*$/PLATFORM=$target/;
@@ -1995,6 +2005,25 @@ print OUT "#ifdef  __cplusplus\n";
 print OUT "}\n";
 print OUT "#endif\n";
 close(OUT);
+# Include defaults dir
+open(IN,'<e_os.h') || die "unable to read e_os.h:$!\n";
+unlink("e_os.h.new") || die "unable to remove old e_os.h.new:$!\n" if -e "e_os.h.new";
+open(OUT,'>e_os.h.new') || die "unable to create e_os.h.new:$!\n";
+
+while (<IN>)
+	{
+	if	(/^#\s*define\s+OPENSSLDIR_DEFAULTS/)
+		{
+		my $foo = $openssldir_defaults;
+		$foo =~ s/\\/\\\\/g;
+		s/^(#\s*define\s+OPENSSLDIR_DEFAULTS\b).*$/$1 "$foo"/;
+		}
+	print OUT $_;
+	}
+close(IN);
+close(OUT);
+rename("e_os.h","e_os.h.bak") || die "unable to rename e_os.h\n" if -e "e_os.h";
+rename("e_os.h.new","e_os.h") || die "unable to rename e_os.h.new\n";
 if (compare("crypto/opensslconf.h.new","crypto/opensslconf.h"))
 	{
 	rename("crypto/opensslconf.h","crypto/opensslconf.h.bak") || die "unable to rename crypto/opensslconf.h\n" if -e "crypto/opensslconf.h";
diff --git a/Makefile.org b/Makefile.org
index f51f0a756c..b689e69d6f 100644
--- a/Makefile.org
+++ b/Makefile.org
@@ -29,6 +29,9 @@ INSTALLTOP=/usr/local/ssl
 # Do not edit this manually. Use Configure --openssldir=DIR do change this!
 OPENSSLDIR=/usr/local/ssl
 
+# Stateless default
+OPENSSLDIR_DEFAULTS=/usr/share/defaults/ssl
+
 # NO_IDEA - Define to build without the IDEA algorithm
 # NO_RC4  - Define to build without the RC4 algorithm
 # NO_RC2  - Define to build without the RC2 algorithm
@@ -216,6 +219,7 @@ BUILDENV=	LC_ALL=C PLATFORM='$(PLATFORM)' PROCESSOR='$(PROCESSOR)'\
 		SDIRS='$(SDIRS)' LIBRPATH='$(INSTALLTOP)/$(LIBDIR)'	\
 		INSTALL_PREFIX='$(INSTALL_PREFIX)'		\
 		INSTALLTOP='$(INSTALLTOP)' OPENSSLDIR='$(OPENSSLDIR)'	\
+		OPENSSLDIR_DEFAULTS='$(OPENSSLDIR_DEFAULTS)'	\
 		LIBDIR='$(LIBDIR)'				\
 		MAKEDEPEND='$$$${TOP}/util/domd $$$${TOP} -MD $(MAKEDEPPROG)' \
 		DEPFLAG='-DOPENSSL_NO_DEPRECATED $(DEPFLAG)'	\
@@ -413,7 +417,7 @@ libclean:
 	rm -f *.map *.so *.so.* *.dylib *.dll engines/*.so engines/*.dll engines/*.dylib *.a engines/*.a */lib */*/lib
 
 clean:	libclean
-	rm -f shlib/*.o *.o core a.out fluff rehash.time testlog make.log cctest cctest.c
+	rm -f shlib/*.o *.o core a.out fluff rehash.time testlog make.log cctest cctest.c e_os.h.bak
 	@set -e; target=clean; $(RECURSIVE_BUILD_CMD)
 	rm -f $(LIBS)
 	rm -f openssl.pc libssl.pc libcrypto.pc
@@ -550,7 +554,8 @@ install_sw:
 		$(INSTALL_PREFIX)$(INSTALLTOP)/include/openssl \
 		$(INSTALL_PREFIX)$(OPENSSLDIR)/misc \
 		$(INSTALL_PREFIX)$(OPENSSLDIR)/certs \
-		$(INSTALL_PREFIX)$(OPENSSLDIR)/private
+		$(INSTALL_PREFIX)$(OPENSSLDIR)/private \
+		$(INSTALL_PREFIX)$(OPENSSLDIR_DEFAULTS)
 	@set -e; headerlist="$(EXHEADER)"; for i in $$headerlist;\
 	do \
 	(cp $$i $(INSTALL_PREFIX)$(INSTALLTOP)/include/openssl/$$i; \
diff --git a/apps/Makefile b/apps/Makefile
index 8c3297ea67..913798da8a 100644
--- a/apps/Makefile
+++ b/apps/Makefile
@@ -119,6 +119,7 @@ install:
 	@cp openssl.cnf $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf.new; \
 	chmod 644 $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf.new; \
 	mv -f  $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf.new $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf
+	cp -f $(INSTALL_PREFIX)$(OPENSSLDIR)/openssl.cnf $(INSTALL_PREFIX)$(OPENSSLDIR_DEFAULTS)/openssl.cnf
 
 tags:
 	ctags $(SRC)
diff --git a/apps/apps.c b/apps/apps.c
index c487bd92db..d1b8bcbdb2 100644
--- a/apps/apps.c
+++ b/apps/apps.c
@@ -120,6 +120,8 @@
 #include <stdlib.h>
 #include <string.h>
 #include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
 #include <ctype.h>
 #include <errno.h>
 #include <assert.h>
@@ -1606,6 +1608,8 @@ char *make_config_name()
     const char *t = X509_get_default_cert_area();
     size_t len;
     char *p;
+    int ret = 0;
+    struct stat st;
 
     len = strlen(t) + strlen(OPENSSL_CONF) + 2;
     p = OPENSSL_malloc(len);
@@ -1617,6 +1621,22 @@ char *make_config_name()
 #endif
     BUF_strlcat(p, OPENSSL_CONF, len);
 
+    ret = stat(p, &st);
+    if (ret == 0 && S_ISREG(st.st_mode))
+        return p;
+
+    OPENSSL_free(p);
+
+    len = strlen(OPENSSLDIR_DEFAULTS) + strlen(OPENSSL_CONF) + 2;
+    p = OPENSSL_malloc(len);
+    if (p == NULL)
+        return NULL;
+    BUF_strlcpy(p, OPENSSLDIR_DEFAULTS, len);
+#ifndef OPENSSL_SYS_VMS
+    BUF_strlcat(p, "/", len);
+#endif
+    BUF_strlcat(p, OPENSSL_CONF, len);
+
     return p;
 }
 
diff --git a/crypto/cryptlib.h b/crypto/cryptlib.h
index fba180a6b2..0017514b68 100644
--- a/crypto/cryptlib.h
+++ b/crypto/cryptlib.h
@@ -81,8 +81,14 @@ extern "C" {
 
 # ifndef OPENSSL_SYS_VMS
 #  define X509_CERT_AREA          OPENSSLDIR
-#  define X509_CERT_DIR           OPENSSLDIR "/certs"
-#  define X509_CERT_FILE          OPENSSLDIR "/cert.pem"
+/* We must leave the X509_CERT_AREA intact since it's used in many places to
+ * build path to the configuration file (as opposed to the CA certificates as
+ * its name suggests) via X509_get_default_cert_area(). For certificates, we use
+ * CLR_X509_CERT_AREA macro.
+ */
+#  define CLR_X509_CERT_AREA      "/var/cache/ca-certs"
+#  define X509_CERT_DIR           CLR_X509_CERT_AREA "/anchors"
+#  define X509_CERT_FILE          CLR_X509_CERT_AREA "/compat/ca-roots.pem"
 #  define X509_PRIVATE_DIR        OPENSSLDIR "/private"
 # else
 #  define X509_CERT_AREA          "SSLROOT:[000000]"
diff --git a/e_os.h b/e_os.h
index 1fa36c1719..3362dad73f 100644
--- a/e_os.h
+++ b/e_os.h
@@ -487,6 +487,7 @@ typedef unsigned long clock_t;
 #    include <fcntl.h>
 #   endif
 
+#   define OPENSSLDIR_DEFAULTS "PLACEHOLDER"
 #   define OPENSSL_CONF        "openssl.cnf"
 #   define SSLEAY_CONF         OPENSSL_CONF
 #   define RFILE               ".rnd"
-- 
2.13.2

